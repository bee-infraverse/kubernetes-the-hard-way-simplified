---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: content-site
  labels: &labels
    app: content-site
spec:
  replicas: 1
  selector:
    matchLabels: *labels
  serviceName: content-site-headless
  template:
    metadata:
      labels: *labels
    spec:
      containers:
      - image: docker.io/library/nginx:1.29.1
        name: nginx
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            memory: "256Mi"
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: site-data
          mountPath: /usr/share/nginx/html
        readinessProbe:
          exec:
            command:
            - cat
            - /usr/share/nginx/html/index.html
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      initContainers:
      - image: registry.k8s.io/git-sync/git-sync:v4.4.3
        name: gitsync-pull
        command: [ "/bin/sh", "-c" ]
        args:
        - '/git-sync --repo="$GIT_REPO" --root=/git/root --link=repo --depth=1 --period=30s --ref=main'
        envFrom:
        - configMapRef:
            name: gitsync
        volumeMounts:
        - name: git-secret
          mountPath: /etc/git-secret
        - name: git-data
          mountPath: /git/root
        securityContext:
          runAsUser: 65533
        restartPolicy: Always
        startupProbe:
          exec:
            command:
            - cat
            - /git/root/repo/hugo.toml
      - name: chown
        image: alpine:3.22
        command: [ "chown", "-R", "65533:65533", "/output" ]
        volumeMounts:
        - name: site-data
          mountPath: /output
      - name: hugo
        image: docker.io/hugomods/hugo:non-root-0.148.2
        command: [ "hugo", "server", "--bind", "0.0.0.0", "--baseURL", "/", "--source", "/git/repo", "--destination", "/output" ]
        securityContext:
          runAsUser: 65533
        restartPolicy: Always
        volumeMounts:
        - name: git-data
          mountPath: /git
        - name: site-data
          mountPath: /output
      volumes:
      - name: site-data
        emptyDir: {}
      - name: git-secret
        secret:
          secretName: git-creds
          defaultMode: 400
      securityContext:
        fsGroup: 65533
  volumeClaimTemplates:
  - metadata:
      name: git-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: "local-path"
